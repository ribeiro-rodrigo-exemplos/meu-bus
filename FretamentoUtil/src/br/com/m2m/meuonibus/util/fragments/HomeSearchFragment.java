package br.com.m2m.meuonibus.util.fragments;import java.util.ArrayList;import java.util.List;import android.annotation.SuppressLint;import android.app.Activity;import android.content.ComponentName;import android.content.Intent;import android.os.Bundle;import android.support.v4.app.Fragment;import android.support.v4.content.IntentCompat;import android.support.v4.widget.SwipeRefreshLayout.OnRefreshListener;import android.view.LayoutInflater;import android.view.Menu;import android.view.MenuInflater;import android.view.MenuItem;import android.view.View;import android.view.ViewGroup;import android.widget.AdapterView;import android.widget.ArrayAdapter;import android.widget.Button;import android.widget.Spinner;import android.widget.Toast;import br.com.hhw.startapp.helpers.ServiceRestClientHelper;import br.com.m2m.meuonibus.exceptions.FilterException;import br.com.m2m.meuonibus.util.R;import br.com.m2m.meuonibus.util.activities.OnibusDetalheActivity;import br.com.m2m.meuonibus.util.models.ws.MeuOnibusWS;import br.com.m2m.meuonibuscommons.handlers.LinhaOnibusHandler;import br.com.m2m.meuonibuscommons.models.LinhaOnibus;import br.com.m2m.meuonibuscommons.models.Trajeto;public class HomeSearchFragment extends Fragment implements OnRefreshListener {		private Spinner mSpnLine;	private Spinner mSpnRoute;		private Button mBtnFilter;		private Activity ownerActivity;	private ArrayList<LinhaOnibus> mLinhas = new ArrayList<LinhaOnibus>();		private ArrayAdapter<LinhaOnibus> mSpnLineAdapter;	private ArrayAdapter<Trajeto> mSpnRouteAdapter;		private LinhaOnibus mCurrentLine;	private Trajeto mCurrentRoute;		public static HomeSearchFragment newInstance() {		return new HomeSearchFragment();		}	@Override	public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {		setHasOptionsMenu(true);		View contentView = inflater.inflate(R.layout.fragment_home_search, container, false);		setLayout(contentView);		return contentView;	}	@Override	public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {		super.onCreateOptionsMenu(menu, inflater);	}	@Override	public boolean onOptionsItemSelected(MenuItem item) {		ownerActivity.onBackPressed();		return super.onOptionsItemSelected(item);	}	@Override	public void onDestroy() {		super.onDestroy();		ServiceRestClientHelper.cancelRequests(ownerActivity);	}	@Override	public void onAttach(Activity activity) {		super.onAttach(activity);		ownerActivity = activity;	}	@Override	public void onResume() {		super.onResume();		loadLineFilter();	}	@SuppressLint("NewApi")	private void setLayout(View contentView) {		mSpnLine = (Spinner) contentView.findViewById(R.id.spn_linha);		mSpnRoute = (Spinner) contentView.findViewById(R.id.spn_trajeto);		mBtnFilter = (Button) contentView.findViewById(R.id.btn_filtrar);		mBtnFilter.setOnClickListener(new View.OnClickListener() {						@Override			public void onClick(View v) {				try {					checkFilters();					Intent intent = new Intent(ownerActivity, OnibusDetalheActivity.class);					ComponentName cn = intent.getComponent();					Intent mainIntent = IntentCompat.makeRestartActivityTask(cn);					mainIntent.putExtra(OnibusDetalheActivity.EXTRA_ONIBUS_DETALHE_LINHA, mCurrentLine);					mainIntent.putExtra(OnibusDetalheActivity.EXTRA_ONIBUS_DETALHE_TRAJETO, mCurrentRoute);					ownerActivity.startActivity(mainIntent);				} catch (FilterException e) {					Toast.makeText(ownerActivity.getBaseContext(), e.getMessage(), Toast.LENGTH_SHORT).show();				}			}		});		mSpnLine.setEnabled(false);		mSpnRoute.setEnabled(false);		mSpnLine.setOnItemSelectedListener(mSpnLineSelectedListener);		mSpnRoute.setOnItemSelectedListener(mSpnRouteSelectedListener);	}	private void checkFilters() throws FilterException {		if (mCurrentLine == null || mCurrentLine.idLinha == 0) {			throw new FilterException("É necessário selecionar a linha");		}		if (mCurrentRoute == null || mCurrentRoute.idPonto == 0) {			throw new FilterException("É necessário selecionar o trajeto");		}	}	private void loadLineFilter() {		if (!mLinhas.isEmpty()) {			return;		}		MeuOnibusWS.getLinhasAgrupamento(ownerActivity, new LinhaOnibusHandler() {		      @Override		      public void setLinhasOnibus(ArrayList<LinhaOnibus> linhasHandler) {		    	LinhaOnibus initLine = new LinhaOnibus();		    	initLine.name = "- Selecione a linha -";		    			    	mLinhas.add(initLine);		    			    	for (LinhaOnibus lo : linhasHandler) {		    		mLinhas.add(lo);		    	}		    	setLineSpinnerAdapter();		      }		      @Override		      public void setErro(Throwable e) {}	    });	}		private void setLineSpinnerAdapter() {		mSpnLineAdapter = new ArrayAdapter<LinhaOnibus>(ownerActivity, 				android.R.layout.simple_spinner_item, mLinhas);		mSpnLineAdapter.setDropDownViewResource(R.layout.simple_spinner_dropdown_item);		mSpnLine.setAdapter(mSpnLineAdapter);		mSpnLine.setEnabled(true);	}		private AdapterView.OnItemSelectedListener mSpnLineSelectedListener =			new AdapterView.OnItemSelectedListener() {				@Override				public void onItemSelected(AdapterView<?> parent, View view, 						int position, long id) {										mCurrentLine = mSpnLineAdapter.getItem(position);					loadRouteFilter();				}				@Override				public void onNothingSelected(AdapterView<?> parent) {}	};	private AdapterView.OnItemSelectedListener mSpnRouteSelectedListener = 			new AdapterView.OnItemSelectedListener() {				@Override				public void onItemSelected(AdapterView<?> parent, View view, 						int position, long id) {										mCurrentRoute = mSpnRouteAdapter.getItem(position);				}				@Override				public void onNothingSelected(AdapterView<?> parent) {}	};		private void loadRouteFilter() {		List<Trajeto> routesTemp = new ArrayList<Trajeto>();		routesTemp.add(getInitRoute());				if (mCurrentLine.trajetos == null || mCurrentLine.trajetos.isEmpty()) {			return;		}		for (Trajeto t : mCurrentLine.trajetos) {			routesTemp.add(t);		}		setRouteSpinnerAdapter(routesTemp);	}		private void setRouteSpinnerAdapter(List<Trajeto> routes) {		mSpnRouteAdapter = new ArrayAdapter<Trajeto>(ownerActivity, 				android.R.layout.simple_spinner_item, routes);		mSpnRouteAdapter.setDropDownViewResource(R.layout.simple_spinner_dropdown_item);		mSpnRoute.setAdapter(mSpnRouteAdapter);		mSpnRoute.setEnabled(true);	}		private Trajeto getInitRoute() {	  	Trajeto initRoute = new Trajeto();	  	initRoute.nome = "- Selecione o trajeto -";		return initRoute;	}	@Override	public void onRefresh() {}}