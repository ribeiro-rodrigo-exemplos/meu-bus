package br.com.m2m.meuonibus.fragments;import java.util.ArrayList;import java.util.List;import android.annotation.SuppressLint;import android.app.Activity;import android.content.Context;import android.content.Intent;import android.os.Build;import android.os.Bundle;import android.support.v4.app.Fragment;import android.support.v4.widget.SwipeRefreshLayout;import android.support.v4.widget.SwipeRefreshLayout.OnRefreshListener;import android.util.Log;import android.view.LayoutInflater;import android.view.Menu;import android.view.MenuInflater;import android.view.MenuItem;import android.view.View;import android.view.ViewGroup;import android.view.animation.AlphaAnimation;import android.widget.ArrayAdapter;import android.widget.ListView;import android.widget.RelativeLayout;import android.widget.TextView;import android.widget.Toast;import br.com.hhw.startapp.helpers.ServiceRestClientHelper;import br.com.m2m.meuonibus.R;import br.com.m2m.meuonibus.activities.ListaLinhasActivity;import br.com.m2m.meuonibus.activities.OnibusDetalheActivity;import br.com.m2m.meuonibus.activities.helpers.AppCustomDialogHelper;import br.com.m2m.meuonibus.activities.helpers.DateTimeHelper;import br.com.m2m.meuonibus.handlers.AppCustomDialogHandler;import br.com.m2m.meuonibus.handlers.LinhaOnibusHandler;import br.com.m2m.meuonibus.models.Coordenada;import br.com.m2m.meuonibus.models.LinhaOnibus;import br.com.m2m.meuonibus.models.PontoOnibus;import br.com.m2m.meuonibus.models.db.PontoDAO;import br.com.m2m.meuonibus.models.ws.MeuOnibusWS;public class ListaLinhasFragment extends Fragment implements OnRefreshListener {	PontoOnibus ponto;	private Activity ownerActivity;	private SwipeRefreshLayout swipeLayout;	private ListView listView;	private TextView enderecoPonto;	private RelativeLayout caixaEnderecoPonto;	MenuItem favorito;	private PontoDAO pontoDao;	public static final String BUNDLE_LISTA_LINHAS_PONTO = ListaLinhasFragment.class			.getName() + "#bundle_ponto";	private ArrayList<LinhaOnibus> linhas = new ArrayList<LinhaOnibus>();	public static ListaLinhasFragment newInstance(PontoOnibus ponto) {		ListaLinhasFragment fragment = new ListaLinhasFragment();		Bundle bundle = new Bundle();		bundle.putSerializable(BUNDLE_LISTA_LINHAS_PONTO, ponto);		fragment.setArguments(bundle);		return fragment;	}	@Override	public View onCreateView(LayoutInflater inflater, ViewGroup container,			Bundle savedInstanceState) {		setHasOptionsMenu(true);		View contentView = inflater.inflate(R.layout.fragment_lista_linhas,				container, false);		setLayout(contentView);		setSwipeRefresh(contentView);		try {			ponto = (PontoOnibus) getArguments().getSerializable(					BUNDLE_LISTA_LINHAS_PONTO);			// Toast.makeText(ownerActivity.getApplicationContext(), ponto.nome,			// Toast.LENGTH_SHORT).show();			if (ponto.endereco != null) {				enderecoPonto.setText(ponto.endereco);			}			Log.d("id ponto >>>>> ", ponto.idPonto + "");			loadLinhas();		} catch (Exception e) {			Log.d("Error", e.toString());//			Coordenada latLong = new Coordenada();//			latLong.latitude = -14.2392976;//			latLong.longitude = -53.1805017;//			ponto = new PontoOnibus();//			ponto.nome = "Ponto: ";//			ponto.endereco = "Rua. ";//			ponto.idPonto = 111222333;//			ponto.latLong = latLong;		}		return contentView;	}	@Override	public void onCreateOptionsMenu(Menu menu, MenuInflater inflater) {		super.onCreateOptionsMenu(menu, inflater);		inflater.inflate(R.menu.menu_favorito, menu);		favorito = menu.findItem(R.id.action_favorito);		pontoDao = new PontoDAO(ownerActivity);		pontoDao.open();		updateMenuStatus();	}	@Override	public boolean onOptionsItemSelected(MenuItem item) {		int id = item.getItemId();		if (id == R.id.action_favorito) {			if (pontoDao.selectPonto(ponto) == null) {				pontoDao.insertPonto(ponto);				favorito.setIcon(R.drawable.ac_favorito_on);			} else {				desfavoritar(ponto);			}			return true;		} else if (id == R.id.action_editar) {			showEditNameMessage();		} else {			ownerActivity.onBackPressed();		}		return super.onOptionsItemSelected(item);	}	@Override	public void onDestroy() {		super.onDestroy();		ServiceRestClientHelper.cancelRequests(ownerActivity);	}	@Override	public void onAttach(Activity activity) {		super.onAttach(activity);		ownerActivity = activity;	}	@Override	public void onRefresh() {		// TODO Auto-generated method stub		loadLinhas();	}	@SuppressLint("NewApi")	private void setLayout(View contentView) {		enderecoPonto = (TextView) contentView				.findViewById(R.id.endereco_lista_linhas_fragment);		listView = (ListView) contentView.findViewById(R.id.linhas_listview);		caixaEnderecoPonto = (RelativeLayout) contentView				.findViewById(R.id.container_endereco_lista_linhas_fragment);		float alpha = 0.8f;		if (Build.VERSION.SDK_INT < 11) {			final AlphaAnimation animation = new AlphaAnimation(alpha, alpha);			animation.setDuration(0);			animation.setFillAfter(true);			caixaEnderecoPonto.startAnimation(animation);		} else {			caixaEnderecoPonto.setAlpha(alpha);		}	}	private void desfavoritar(PontoOnibus ponto) {		showConfirmationMessage();	}	private void showConfirmationMessage() {		String text = getString(R.string.desfavoritar_confirmacao);		AppCustomDialogHelper.showGenericDialog(ownerActivity, null, text,				getString(R.string.cancelar), new AppCustomDialogHandler() {					@Override					public void setOk() {						pontoDao.deletePonto(ponto);						favorito.setIcon(R.drawable.ac_favorito_off);					}				});	}	private void showEditNameMessage() {		String text = getString(R.string.digite_novo_nome_ponto);		AppCustomDialogHelper.showDialogInput(ownerActivity, text,				new AppCustomDialogHandler() {					@Override					public void setText(String nome) {						if (nome != null && !nome.equals("")) {							((ListaLinhasActivity) ownerActivity).setCustomTitle(nome);//							PontoOnibus pontoDB = pontoDao.selectPonto(ponto);							pontoDao.deletePonto(ponto);							ponto.nome = nome;							pontoDao.insertPonto(ponto);							updateMenuStatus();						}					}				});	}	public void updateMenuStatus() {		if (pontoDao.selectPonto(ponto) == null) {			favorito.setIcon(R.drawable.ac_favorito_off);		} else {			favorito.setIcon(R.drawable.ac_favorito_on);		}	}	private void setSwipeRefresh(View contentView) {		swipeLayout = (SwipeRefreshLayout) contentView				.findViewById(R.id.swipe_container_lista_linhas_fragment);		swipeLayout.setOnRefreshListener((OnRefreshListener) this);	}	private void loadLinhas() {		swipeLayout.post(new Runnable() {			@Override			public void run() {				swipeLayout.setRefreshing(true);			}		});		swipeLayout.setRefreshing(false);		swipeLayout.setEnabled(false);		MeuOnibusWS.getLinhas(String.valueOf(ponto.idPonto),				new LinhaOnibusHandler() {					@Override					public void setLinhasOnibus(							ArrayList<LinhaOnibus> linhasHandler) {						swipeLayout.setRefreshing(false);						swipeLayout.setEnabled(true);						linhas = linhasHandler;						showLinhas();					}					@Override					public void setErro(Throwable e) {						swipeLayout.setRefreshing(false);						swipeLayout.setEnabled(true);						try {							Toast.makeText(ownerActivity.getApplicationContext(),getString(R.string.nao_foi_possivel_localizar_linhas),									Toast.LENGTH_SHORT).show();						} catch (Exception e2) {							// TODO: handle exception						}						}				});	}	private void showLinhas() {		ArrayAdapter<LinhaOnibus> adapter = new LinhasAdapter(ownerActivity,				linhas);		listView.setAdapter(adapter);	}	public class LinhasAdapter extends ArrayAdapter<LinhaOnibus> {		private List<LinhaOnibus> linhas;		public LinhasAdapter(Context context, List<LinhaOnibus> objects) {			super(context, 0, objects);			this.linhas = objects;		}		@Override		public int getCount() {			return linhas.size();		}		@SuppressLint("InflateParams")		@Override		public View getView(int position, View convertView, ViewGroup parent) {			View v = convertView;			final CompleteListViewHolder viewHolder;			final LinhaOnibus currentObj = linhas.get(position);			currentObj.latLongPonto = ponto.latLong;			currentObj.idPonto = ponto.idPonto;			if (convertView == null) {				LayoutInflater li = (LayoutInflater) getContext()						.getSystemService(Context.LAYOUT_INFLATER_SERVICE);				v = li.inflate(R.layout.adapter_lista_linhas, null);				viewHolder = new CompleteListViewHolder(v);				v.setTag(viewHolder);				v.setOnClickListener(new View.OnClickListener() {					@Override					public void onClick(View view) {						Intent intent = new Intent(ownerActivity,								OnibusDetalheActivity.class);						Bundle extra = new Bundle();						extra.putSerializable(								OnibusDetalheActivity.BUNDLE_ONIBUS_DETALHE_LINHA,								currentObj);						intent.putExtra(								OnibusDetalheActivity.EXTRA_ONIBUS_DETALHE_LINHA,								extra);						ownerActivity.startActivity(intent);					}				});			} else {				viewHolder = (CompleteListViewHolder) v.getTag();			}			viewHolder.linha.setText(currentObj.numero);			viewHolder.nome.setText(currentObj.nome);			String tempo = DateTimeHelper					.formatHoursMinutes(currentObj.tempoChegada);			viewHolder.tempo.setText(tempo);			return v;		}		class CompleteListViewHolder {			public int idLinha;			public TextView linha;			public TextView nome;			public TextView tempo;			public CompleteListViewHolder(View base) {				linha = (TextView) base						.findViewById(R.id.linha_adapter_lista_linha);				nome = (TextView) base						.findViewById(R.id.nome_adapter_lista_linha);				tempo = (TextView) base						.findViewById(R.id.tempo_adapter_lista_linha);			}		}	}}