package br.com.m2m.meuonibus.models.db;import java.util.ArrayList;import java.util.List;import android.content.ContentValues;import android.content.Context;import android.database.Cursor;import android.database.SQLException;import android.database.sqlite.SQLiteDatabase;import android.util.Log;import br.com.m2m.meuonibus.models.Coordenada;import br.com.m2m.meuonibus.models.PontoOnibus;public class PontoDAO {	private SQLiteDatabase database;	private AppDataBase db;	public PontoDAO(Context context) {		db = new AppDataBase(context);	}	public void open() throws SQLException {		database = db.getWritableDatabase();	}	public void close() {		db.close();	}	public void insertPonto(PontoOnibus ponto) {		ContentValues values = new ContentValues();		values.put(PontoTable.COLUMN_ID_PONTO, ponto.idPonto);		values.put(PontoTable.COLUMN_NOME, ponto.nome);		values.put(PontoTable.COLUMN_ENDERECO, ponto.endereco);		values.put(PontoTable.COLUMN_LATITUDE, ponto.latLong.latitude);		values.put(PontoTable.COLUMN_LONGITUDE, ponto.latLong.longitude);		database.insert(PontoTable.TABLE_PONTO, null, values);		// long insertId = database.insert(PontoTable.TABLE_PONTO, null,		// values);		// Cursor cursor = database.query(PontoTable.TABLE_PONTO,		// allColumns, PontoTable.COLUMN_ID + " = " + insertId, null,		// null, null, null);		// cursor.moveToFirst();		// Comment newComment = cursorToComment(cursor);		// cursor.close();		// return newComment;	}	public void deletePonto(PontoOnibus ponto) {		if (ponto == null)			return;		long id = ponto.idPonto;		System.out.println("Favorito deleted with id: " + id);		database.delete(PontoTable.TABLE_PONTO, PontoTable.COLUMN_ID_PONTO				+ " = " + id, null);	}	public PontoOnibus selectPonto(PontoOnibus ponto) {		PontoOnibus pontoFromDB = null;		if (ponto == null)			return pontoFromDB;		int id = ponto.idPonto;		System.out.println("Favorito select with id: " + id);		Cursor cursor = database.query(PontoTable.TABLE_PONTO, // a. table				PontoTable.ALLCOLUMNS, // b. column names				PontoTable.COLUMN_ID_PONTO + "= ?", // c. selections				new String[] { String.valueOf(id) }, // d. selections args				null, // e. group by				null, // f. having				null, // g. order by				null); // h. limit		if (cursor.moveToFirst()) {			pontoFromDB = cursorToPonto(cursor);		}		return pontoFromDB;	}	public List<PontoOnibus> getAllPontos() {		List<PontoOnibus> pontos = new ArrayList<PontoOnibus>();		Cursor cursor = database.query(PontoTable.TABLE_PONTO,				PontoTable.ALLCOLUMNS, null, null, null, null, null);		cursor.moveToFirst();		while (!cursor.isAfterLast()) {			PontoOnibus ponto = cursorToPonto(cursor);			pontos.add(ponto);			cursor.moveToNext();		}		Log.d("Total Pontos favoritado: ", pontos.size() + "");		// make sure to close the cursor		cursor.close();		return pontos;	}	private PontoOnibus cursorToPonto(Cursor cursor) {		PontoOnibus ponto = new PontoOnibus();		ponto.idPonto = cursor.getInt(cursor				.getColumnIndex(PontoTable.COLUMN_ID_PONTO));		ponto.nome = cursor.getString(cursor				.getColumnIndex(PontoTable.COLUMN_NOME));		ponto.endereco = cursor.getString(cursor				.getColumnIndex(PontoTable.COLUMN_ENDERECO));		Coordenada latLong = new Coordenada();		latLong.latitude = cursor.getDouble(cursor				.getColumnIndex(PontoTable.COLUMN_LATITUDE));		latLong.longitude = cursor.getDouble(cursor				.getColumnIndex(PontoTable.COLUMN_LONGITUDE));		ponto.latLong = latLong;		return ponto;	}}