package br.com.m2m.meuonibuscommons.models.db;import java.text.SimpleDateFormat;import java.util.ArrayList;import java.util.Date;import java.util.List;import java.util.Locale;import android.content.ContentValues;import android.content.Context;import android.database.Cursor;import android.database.SQLException;import android.database.sqlite.SQLiteDatabase;import android.util.Log;import br.com.m2m.meuonibuscommons.models.Coordenada;public class LocalizacaoDAO {	private SQLiteDatabase database;	private AppDataBase db;	public LocalizacaoDAO(Context context) {		db = new AppDataBase(context);	}	public void open() throws SQLException {		database = db.getWritableDatabase();	}	public void close() {		db.close();	}	public void insertLocalizacao(Coordenada local) {				deleteAll();				SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss", Locale.getDefault()); 		Date date = new Date();				ContentValues values = new ContentValues();		values.put(LocalizacaoTable.COLUMN_NOME, local.nome);		values.put(LocalizacaoTable.COLUMN_LATITUDE, local.latitude);		values.put(LocalizacaoTable.COLUMN_LONGITUDE, local.longitude);		values.put(LocalizacaoTable.COLUMN_DATA, dateFormat.format(date));		database.insert(LocalizacaoTable.TABLE_LOCALIZACAO, null, values);	}	public void deleteAll() {		database.delete(LocalizacaoTable.TABLE_LOCALIZACAO, null, null);	}	public Coordenada selectUltimoPonto() {		Coordenada local = null;		Cursor cursor = database.query(LocalizacaoTable.TABLE_LOCALIZACAO, // a. table				LocalizacaoTable.ALLCOLUMNS, // b. column names				null, // c. selections				null , // d. selections args				null, // e. group by				null, // f. having				LocalizacaoTable.COLUMN_ID + " desc", // g. order by				"1"); // h. limit		if (cursor.moveToFirst()) {			local = cursorToLocal(cursor);		}		cursor.close();				return local;	}		public List<Coordenada> getAll() {		List<Coordenada> locais = new ArrayList<Coordenada>();		Cursor cursor = database.query(LocalizacaoTable.TABLE_LOCALIZACAO,				LocalizacaoTable.ALLCOLUMNS, null, null, null, null, null);		cursor.moveToFirst();		while (!cursor.isAfterLast()) {			Coordenada local = cursorToLocal(cursor);			locais.add(local);			cursor.moveToNext();		}		Log.d("Total Coordenadas gravadas: ", locais.size()+"");		cursor.close();		return locais;	}	private Coordenada cursorToLocal(Cursor cursor) {		Coordenada local = new Coordenada();		local.idBD = cursor.getLong(cursor.getColumnIndex(LocalizacaoTable.COLUMN_ID));		local.nome = cursor.getString(cursor				.getColumnIndex(LocalizacaoTable.COLUMN_NOME));		local.latitude = cursor.getDouble(cursor.getColumnIndex(LocalizacaoTable.COLUMN_LATITUDE));		local.longitude = cursor.getDouble(cursor.getColumnIndex(LocalizacaoTable.COLUMN_LONGITUDE));		return local;	}}